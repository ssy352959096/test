<?xml version="1.0" encoding="UTF-8"?>
		<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns="http://java.sun.com/xml/ns/javaee"
			xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
			version="3.0">
			<display-name>aurora</display-name>
			<!-- 编码过滤器 -->
			<!-- spring-mybatis配置 ，全局范围内环境参数初始化 -->
			<context-param>
        		<param-name>contextConfigLocation</param-name>
        		<param-value>classpath:spring-mybatis.xml</param-value>
   			</context-param>
   			<context-param>
				<param-name>log4jConfigLocation</param-name>
				<param-value>classpath:log4j.properties</param-value>
			</context-param>
			<filter>
				<filter-name>encodingFilter</filter-name>
				<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
				<async-supported>true</async-supported>
				<init-param>
					<param-name>encoding</param-name>
					<param-value>UTF-8</param-value>
				</init-param>
			</filter>
			<filter-mapping>
				<filter-name>encodingFilter</filter-name>
				<url-pattern>/*</url-pattern>
			</filter-mapping>
			
			<!--spring监听器-->
			<listener>        <!--用来设定Listener接口-->
				<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
			</listener>
			<!-- 防止Spring内存溢出监听器 -->
			<listener>
				<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
			</listener>
			<!-- 使用spring的监听器,当应用启动时来读取log4j的配置文件-->
			<listener>
				<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
			</listener>
			
			<!-- Spring MVC servlet -->
			<servlet>
				<servlet-name>springDispatcherServlet</servlet-name>
				<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
				<init-param>
					<param-name>contextConfigLocation</param-name>
					<param-value>classpath:spring-mvc.xml</param-value>
				</init-param>
				<!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->
				<load-on-startup>1</load-on-startup>
			</servlet>
			<servlet-mapping>
				<servlet-name>springDispatcherServlet</servlet-name>
				<!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
				<url-pattern>/</url-pattern>
			</servlet-mapping>
			<!-- Shiro filter start -->
			<filter>
				<filter-name>shiroFilter</filter-name>
				<filter-class>
					org.springframework.web.filter.DelegatingFilterProxy
				</filter-class>
				<init-param>
					<param-name>targetFilterLifecycle</param-name>
					<param-value>true</param-value>
				</init-param>
			</filter>
			<filter-mapping>
				<filter-name>shiroFilter</filter-name>
				<url-pattern>/*</url-pattern>
			</filter-mapping>
			<!-- Shiro filter end -->
			<!--
			<welcome-file-list>
				<welcome-file>/index.jsp</welcome-file>
			</welcome-file-list>
			-->
			<!-- 配置SESSION超时，单位是分钟，如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->
			<session-config>
				<session-timeout>5</session-timeout>
			</session-config>
			<error-page>
		    	<error-code>404</error-code>
		    	<location>/error.jsp</location>
		    </error-page>
		</web-app>